using System.Collections.Generic;

namespace CompilationSystem
{
    abstract class CodeGenerator
    {
        // ЧАСТИ ПРОГРАММЫ:

        // Заголовок: 000 - 400
        // Тело + определение функций: 400 - 600
        // Таблица импорта: 600 - 800
        // Данные: 800 - A00

        // Доступные регистры: 
        // EAX

        // Доступные команды ассемблера:
        // MOV ADD SUB XOR NOP CALL

        // Доступные функции:
        // ExitProcess 
        // HexMessage - пользовательская функция ( wsprintfA + MessageBoxA ) 
        // которая отображает значение которое содержится в регистре EAX


        #region Заголовок исполняемого файла.

        private byte[] header = {   // DOS заголовок.
                            0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00,    0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
                            0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00, 
                            0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD,    0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68, 
                            0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72,    0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F, 
                            0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E,    0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20, 
                            0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A,    0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x5D, 0x65, 0xFD, 0xC8, 0x19, 0x04, 0x93, 0x9B,    0x19, 0x04, 0x93, 0x9B, 0x19, 0x04, 0x93, 0x9B, 
                            0x97, 0x1B, 0x80, 0x9B, 0x11, 0x04, 0x93, 0x9B,    0xE5, 0x24, 0x81, 0x9B, 0x18, 0x04, 0x93, 0x9B, 
                            0x52, 0x69, 0x63, 0x68, 0x19, 0x04, 0x93, 0x9B,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            // PE заголовок.                                  
                            0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x03, 0x00,    0xD4, 0xDB, 0xA0, 0x50, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0F, 0x01,    
                            /* Опциоанльный заголовок */                       0x0B, 0x01, 0x05, 0x0C, 0x00, 0x02, 0x00, 0x00, 
                            0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
                            0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
                            0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x14, 0x20, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x20, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
                            /* Таблица секций */                               0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 
                            0x9E, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,    0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 
                            0x2E, 0x72, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00,    0xA6, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
                            0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40,    0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 
                            0x1C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,    0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                        };

        public byte[] Header
        {
            get { return header; }
        }
        #endregion

        #region Подпрограмма вызова используемых функций.

        // Подпрограмма вызова используемых функций -
        // user32.wsprintfA, user32.MessageBoxA, kernel32.ExitProcess

        // Эта часть кода (подпрограмма) будет добавлена ​​после тела (кодов) скомпилированной программы.


        private byte[] functionDifenitions = { 0x60, 0x50, 0x68, 0x00, 0x30, 0x40, 0x00, 0x68,    0x06, 0x30, 0x40, 0x00, 0xE8, 0x18, 0x00, 0x00,
                                       0x00, 0x83, 0xC4, 0x0C, 0x6A, 0x00, 0x68, 0x0B,    0x30, 0x40, 0x00, 0x68, 0x06, 0x30, 0x40, 0x00,
                                       0x6A, 0x00, 0xE8, 0x08, 0x00, 0x00, 0x00, 0x61,    0xC3, 0xFF, 0x25, 0x0C, 0x20, 0x40, 0x00, 0xFF,
                                       0x25, 0x08, 0x20, 0x40, 0x00, 0xFF, 0x25, 0x00,    0x20, 0x40, 0x00 
                                     };

        public byte[] FunctionDifenitions
        {
            get { return functionDifenitions; }
        }
        /*        машинный код               |       мнемоники ассемблера
         ------------------------------------|----------------------------------------
                60                           |      pusha
                50                           |      push    eax
                68 00 30 40 00               |      push    offset a_4lx    ; "%.4lX"
                68 06 30 40 00               |      push    offset Text     ; "HexMessage"
                E8 18 00 00 00               |      call    wsprintfA
                83 C4 0C                     |      add     esp, 0Ch
                6A 00                        |      push    0               ; uType
                68 0B 30 40 00               |      push    (offset Text+5) ; lpCaption
                68 06 30 40 00               |      push    offset Text     ; "HexMessage"
                6A 00                        |      push    0               ; hWnd
                E8 08 00 00 00               |      call    MessageBoxA
                61                           |      popa
                C3                           |      retn
         ------------------------------------|---------------------------------------- 
        */

        

        #endregion

        #region Таблица импорта.
        // wsprintfA MessageBox user32.dll; ExitProcess kernel32.dll

        private byte[] importTable = {  
                                0x8A, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x70, 0x20, 0x00, 0x00, 0x64, 0x20, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x58, 0x20, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x7E, 0x20, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00,    0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x98, 0x20, 0x00, 0x00,    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x8A, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x70, 0x20, 0x00, 0x00, 0x64, 0x20, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x7D, 0x02, 0x77, 0x73,    0x70, 0x72, 0x69, 0x6E, 0x74, 0x66, 0x41, 0x00, 
                                0xB1, 0x01, 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67,    0x65, 0x42, 0x6F, 0x78, 0x41, 0x00, 0x75, 0x73, 
                                0x65, 0x72, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C,    0x00, 0x00, 0x9B, 0x00, 0x45, 0x78, 0x69, 0x74,
                                0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x00,    0x6B, 0x65, 0x72, 0x6E, 0x65, 0x6C, 0x33, 0x32,
                                0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                             };

        public byte[] ImportTable
        {
            get { return importTable; }
        }
        #endregion

        #region Абсолютные адреса для functionDifenitions.

        // Формат для wsprintfA ("%.4lX") и заголовок для MessageBoxA ("HexMessage")
        // Используется для простоты сборки исполняемого файла.

        private byte[] staticData = {   0x25, 0x2E, 0x34, 0x6C, 0x58, 0x00, 0xBB, 0xBB,    0xBB, 0xBB, 0xBB, 0x48, 0x65, 0x78, 0x4D, 0x65, 
                                0x73, 0x73, 0x61, 0x67, 0x65, 0x00 
                            };

        public byte[] StaticData
        {
            get { return staticData; }
        }

        #endregion

        // Исполняемый код.
        private byte[] body = new byte[512];

        public byte[] Body
        {
            get { return body; }
            set { body = value; }
        }

        // Данные.
        private byte[] data = new byte[512];

        public byte[] Data
        {
            get { return data; }
            set { data = value; }
        }

        public List<StatementNode> functions = new List<StatementNode>();
        public abstract List<VariableNode> Variables { get; set; }

        public int dataPointer = 0;
        public int programPointer = 0;

        public abstract void Initialize();
        public abstract ByteCode GetNopCode();
        public abstract ByteCode GetCallCode(string[] parameters);
        public abstract ByteCode GetXorCode(string[] parameters);
        public abstract ByteCode GetSubCode(string[] parameters);
        public abstract ByteCode GetAddCode(string[] parameters);
        public abstract ByteCode GetMovCode(string[] parameters);
        public abstract void SetDataVariable(VariableNode node);
        public abstract void FixFunctionAddresses();
        public abstract ByteCode GenerateByteCode();
    }
}
